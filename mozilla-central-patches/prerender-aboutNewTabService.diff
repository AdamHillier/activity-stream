diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1273,4 +1273,5 @@ pref("browser.newtabpage.directory.sourc
 // activates Activity Stream
 pref("browser.newtabpage.activity-stream.enabled", true);
+pref("browser.newtabpage.activity-stream.preload", true);
 pref("browser.newtabpage.activity-stream.aboutHome.enabled", false);
 
diff --git a/browser/components/newtab/aboutNewTabService.js b/browser/components/newtab/aboutNewTabService.js
--- a/browser/components/newtab/aboutNewTabService.js
+++ b/browser/components/newtab/aboutNewTabService.js
@@ -17,5 +17,5 @@ const LOCAL_NEWTAB_URL = "chrome://brows
 
 const ACTIVITY_STREAM_URL = "resource://activity-stream/data/content/activity-stream.html";
-
+const ACTIVITY_STREAM_PRERENDERED_URL = "resource://activity-stream/data/content/activity-stream-prerendered.html";
 const ABOUT_URL = "about:newtab";
 
@@ -24,8 +24,10 @@ const IS_MAIN_PROCESS = Services.appinfo
 // Pref that tells if activity stream is enabled
 const PREF_ACTIVITY_STREAM_ENABLED = "browser.newtabpage.activity-stream.enabled";
+const PREF_ACTIVITY_STREAM_PRERENDERED_ENABLED = "browser.newtabpage.activity-stream.prerender";
 
 function AboutNewTabService() {
   Services.obs.addObserver(this, "quit-application-granted");
   Services.prefs.addObserver(PREF_ACTIVITY_STREAM_ENABLED, this);
+  Services.prefs.addObserver(PREF_ACTIVITY_STREAM_PRERENDERED_ENABLED, this);
   this.toggleActivityStream();
   if (IS_MAIN_PROCESS) {
@@ -72,4 +74,5 @@ AboutNewTabService.prototype = {
   _newTabURL: ABOUT_URL,
   _activityStreamEnabled: false,
+  _activityStreamPrerendered: true,
   _overridden: false,
 
@@ -86,6 +89,12 @@ AboutNewTabService.prototype = {
     switch (topic) {
       case "nsPref:changed":
-        if (this.toggleActivityStream()) {
-          Services.obs.notifyObservers(null, "newtab-url-changed", ABOUT_URL);
+        this.toggleActivityStream();
+        Services.obs.notifyObservers(null, "newtab-url-changed", ABOUT_URL);
+        if (data === PREF_ACTIVITY_STREAM_ENABLED) {
+          if (this.toggleActivityStream()) {
+            Services.obs.notifyObservers(null, "newtab-url-changed", ABOUT_URL);
+          }
+        } else if (data === PREF_ACTIVITY_STREAM_PRERENDERED_ENABLED) {
+          this._activityStreamPrerendered = Services.prefs.getBoolPref(PREF_ACTIVITY_STREAM_PRERENDERED_ENABLED);
         }
         break;
@@ -93,4 +102,5 @@ AboutNewTabService.prototype = {
         Services.obs.removeObserver(this, "quit-application-granted");
         Services.prefs.removeObserver(PREF_ACTIVITY_STREAM_ENABLED, this);
+        Services.prefs.removeObserver(PREF_ACTIVITY_STREAM_PRERENDERED_ENABLED, this);
         if (IS_MAIN_PROCESS) {
           AboutNewTab.uninit();
@@ -140,4 +150,7 @@ AboutNewTabService.prototype = {
   get defaultURL() {
     if (this.activityStreamEnabled) {
+      if (this.activityStreamPrerendered) {
+        return this.activityStreamPrerenderedURL;
+      }
       return this.activityStreamURL;
     }
@@ -173,8 +186,16 @@ AboutNewTabService.prototype = {
   },
 
+  get activityStreamPrerendered() {
+    return this._activityStreamPrerendered;
+  },
+
   get activityStreamURL() {
     return ACTIVITY_STREAM_URL;
   },
 
+  get activityStreamPrerenderedURL() {
+    return ACTIVITY_STREAM_PRERENDERED_URL;
+  },
+
   resetNewTabURL() {
     this._overridden = false;
